name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository's code
      - name: Checkout code
        uses: actions/checkout@v3

      # List directory structure to verify correct path
      - name: List directory structure
        run: ls -R

      # Set up Node.js environment for React
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Cache Node.js dependencies
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Set up SSH to the remote server
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Run build on the remote server
      - name: Build React app on the remote server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@16.171.64.187 "
            cd /. && npm install && npm run build
          "
        env:
          CI: true  # Set this environment variable to ensure npm works in CI mode (optional)

      # Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      # List all S3 Buckets (optional, useful for debugging)
      - name: List all S3 Buckets
        run: |
          aws s3 ls

      # Ensure S3 Bucket Exists
      - name: Ensure S3 Bucket Exists
        run: |
          export BUCKET_NAME="react-s3-bucket"
          if ! aws s3 ls "s3://$BUCKET_NAME" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "Bucket exists: $BUCKET_NAME"
          else
            echo "Bucket does not exist, creating: $BUCKET_NAME"
            aws s3 mb s3://$BUCKET_NAME --region eu-north-1
          fi
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

      # Upload build files to S3
      - name: Upload build to S3
        run: |
          aws s3 sync frontend/build/ s3://$BUCKET_NAME/ --delete
