name: Build and Deploy to GCP Storage Bucket

on:
  push:
    branches:
      - main  # You can modify this to match your production branch name

jobs:
  Build_Node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: |
          yarn install
          
          rm -rf ./dist    # Clear old build
          yarn build       # Generate the build in 'dist'

      - name: Check if dist folder exists
        run: |
          if [ ! -d "./dist" ]; then
            echo "Build failed. dist folder does not exist."
            exit 1
          fi

      - name: Check build folder (debugging)
        run: ls -al ./dist   # List the dist folder contents

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NODE_FILES
          path: ./dist    # Make sure you're uploading the correct directory

  Deploy_To_GCP:
    runs-on: ubuntu-latest
    needs: Build_Node    # Depends on successful completion of the Build_Node job
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: NODE_FILES
          path: ./dist    # Make sure you're downloading the correct artifact

      - name: Setup GCP credentials
        uses: google-github-actions/setup-gcloud@v4
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Deploy to GCP Storage Bucket
        run: |
          gsutil -m rsync -r ./dist gs://your-gcp-bucket-name/  # Sync the dist folder with your GCP bucket

  Invalidate_Cloud_CDN:
    runs-on: ubuntu-latest
    needs: Deploy_To_GCP    # Depends on the Deploy_To_GCP job
    steps:
      - name: Invalidate Cloud CDN (Optional)
        run: |
          gcloud compute url-maps invalidate-cdn-cache your-url-map-name \
            --path "/*" \
            --project ${{ secrets.GCP_PROJECT_ID }}  # Invalidate Cloud CDN cache (optional)
